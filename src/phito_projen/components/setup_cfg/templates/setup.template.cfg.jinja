[metadata]
name = {{ name }}
author = {{ author }}
author_email = {{ author_email }}
home_page = {{ home_page_url }}
description = {{ description }}
# begin TODO, support both .rst and .md README files
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8
# long_description_content_type = text/x-rst; charset=UTF-8
# end TODO
license = Proprietary
# license_file = LICENSE.txt
keywords = <Add keywords here>
project_urls =
    Documentation = https://dsdocs.bengroup.com/tb-retitler/latest/
    Source = https://bitbucket.org/bengrouptech/tb-retitler/src/main/

# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 3 - Beta
    Intended Audience :: All Developers
    Natural Language :: English
    Topic :: Software Development :: Common :: Tool
    License :: Other/Proprietary License
    Operating System :: POSIX :: Linux
    Operating System :: MacOS
    Programming Language :: Python :: 3.9

[options]
zip_safe = False
package_dir=
    =src
packages = find:
include_package_data = True
test_suite = tests/unit_tests
python_requires =  >= 3.6.*
install_requires =
    importlib-metadata; python_version<"3.8"{% for req in install_requires %}
    {{ req }}{% endfor %}

[options.packages.find]
where = src

exclude =
    tests

[options.extras_require]
cli =
    fire
devops =
    aws-cdk-lib
    aws-cdk.aws-lambda-python-alpha
    aws-cdk.aws-apigatewayv2-alpha
    aws-cdk.aws-apigatewayv2-integrations-alpha
    aws-cdk.aws_apigatewayv2_authorizers_alpha
    pulumi
    pulumi-newrelic
    pydantic
    constructs
doc =
    ben-py-docs @ git+ssh://git@bitbucket.org/bengrouptech/ben-py-docs.git
    docutils<0.17
test =
    pytest
    pytest-runner
    pytest-cov
lint =
    ben-py-lint @ git+ssh://git@bitbucket.org/bengrouptech/ben-py-lint.git
gui =
    wxPython
    jsbeautifier
    python-jose
dev =
    twine
    xonsh
    %(cli)s
    %(devops)s
    %(doc)s
    %(test)s
    %(lint)s


# Remove this option and the projects cli folder if the
# project has no command line interface
[options.entry_points]
console_scripts =
    dummy_api = dummy_api.cli.dummy_api_cli:main

# [options.data_files]
# optional data files

[bdist_wheel]
universal = true

[check]
metadata = true
restructuredtext = true
strict = true

[sdist]
formats = zip, gztar

[tool:pytest]
markers =
    foundational: Tests that must pass for subsequent tests to run.
    slow: Tests that take a long time to execute
